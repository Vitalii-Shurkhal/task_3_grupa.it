{"version":3,"sources":["Task.js","App.js","index.js"],"names":["Task","href","React","Component","App","state","quote","latestQuote","displayPrevQuote","length","prevQuote","index","pop","setState","fetchQuote","axios","get","then","response","randomNumber","Math","floor","random","data","catch","error","console","log","this","className","onClick","ReactDom","render","document","getElementById"],"mappings":"8NAEMA,E,4JAEF,WACI,OAEI,gCACI,wCACA,uBACA,oKACA,mBAAGC,KAAO,wIAAV,yBACA,4LACA,8B,GAXGC,IAAMC,WAmBVH,IChBTI,G,kNAEFC,MAAQ,CACJC,MAAO,GACPC,YAAa,I,EAGjBC,iBAAmB,WACf,GAAI,EAAKH,MAAME,YAAYE,OAAS,EAAG,CACnC,IAAMC,EAAS,YAAO,EAAKL,MAAME,aAC7BI,EAAQD,EAAUD,OAAS,EAC/BC,EAAUE,MACV,EAAKC,SAAS,CAAEP,MAAOI,IAAYC,KACnC,EAAKE,SAAS,CAAEN,YAAaG,M,EASrCI,WAAa,WACTC,IAAMC,IAAI,yIACLC,MAAK,SAACC,GACH,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWJ,EAASK,KAAKd,QAEtDH,EADKY,EAASK,KACCJ,GAAfb,MACR,EAAKO,SAAS,CAAEP,UAChB,EAAKO,SAAS,CACVN,YAAY,GAAD,mBAAM,EAAKF,MAAME,aAAjB,CAA8BD,SAGhDkB,OAAM,SAACC,GACJC,QAAQC,IAAIF,O,uDAhBxB,WACIG,KAAKd,e,oBAoBT,WAEI,IAAQR,EAAUsB,KAAKvB,MAAfC,MAER,OACI,sBAAKuB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,6BAAKvB,IACL,gCACI,wBAAQwB,QAASF,KAAKpB,iBAAtB,sBACA,wBAAQsB,QAASF,KAAKd,WAAtB,6B,GAjDFZ,IAAMC,YA0DTC,IC1Df2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c193ef1e.chunk.js","sourcesContent":["import React from 'react';\n\nclass Task extends React.Component {\n\n    render() {\n        return (\n\n            <div>\n                <h2>Task_3</h2>\n                <hr />\n                <p>Przygotowanie aplikacji, która będzie pobierała cytaty z API, która będzie wyświetlała losowy cytat.</p>\n                <a href = 'https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json'>Link to API</a>\n                <p> Dodatkowo stwórz przycisk który umożliwi wylosowanie następnego cytatu oraz przycisk, którypozwoli na powrót do poprzedniego cytatu.</p>\n                <hr/>\n            </div>\n        )\n\n\n    }\n}\n\nexport default Task;","import React from 'react';\nimport axios from 'axios';\nimport Task from './Task'\nimport './App.css';\n\nclass App extends React.Component {\n\n    state = {\n        quote: '',\n        latestQuote: ''\n    };\n\n    displayPrevQuote = () => {\n        if (this.state.latestQuote.length > 1) {\n            const prevQuote = [...this.state.latestQuote]\n            let index = prevQuote.length - 1\n            prevQuote.pop()\n            this.setState({ quote: prevQuote[--index] })\n            this.setState({ latestQuote: prevQuote })\n        }\n\n    }\n\n    componentDidMount() {\n        this.fetchQuote();\n    }\n\n    fetchQuote = () => {\n        axios.get('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\n            .then((response) => {\n                const randomNumber = Math.floor(Math.random() * response.data.length)\n                const data = response.data;\n                const { quote } = data[randomNumber];\n                this.setState({ quote })\n                this.setState({\n                    latestQuote: [...this.state.latestQuote, quote]\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            });\n    }\n\n\n    render() {\n\n        const { quote } = this.state\n\n        return (\n            <div className='app'>\n                <Task />\n                <h2>{quote}</h2>\n                <div>\n                    <button onClick={this.displayPrevQuote}>Previous</button>\n                    <button onClick={this.fetchQuote}>Next </button>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './App'; \n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}